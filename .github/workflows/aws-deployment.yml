name: Docker + AWS CI

on:
  push:
    branches: [ master ]

  workflow_dispatch:

jobs:

  build:

    runs-on: ubuntu-latest
    name: Build and Test

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Create .env file
        env:
          DEV_ENV: ${{ secrets.DEV_ENV }}
        run: echo $DEV_ENV | base64 --decode > .env

      - name: Build and Run the Docker Containers
        run: docker-compose up --build -d

      - name: Run ESLint
        run: docker exec -e CI=true covid-19-tracker-server npm run style:eslint

      - name: Run Tests with Coverage
        run: docker exec covid-19-tracker-server npm run test -- --coverage

  build-and-push:

    needs: [build]
    name: Build and Push to ECR
    runs-on: ubuntu-latest

    outputs:
      image: ${{ steps.build-image.outputs.image }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::$(cat package.json | jq --raw-output '.version')

      - name: Automatic Tagging of Releases
        id: increment-git-tag
        run: |
          bash ./.github/git_update.sh -v ${{ steps.get_version.outputs.VERSION }}

      - name: Create .env file
        env:
          DEV_ENV: ${{ secrets.DEV_ENV }}
        run: echo $DEV_ENV | base64 --decode > .env

      - name: Build, Tag, and Push the Image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: covid-19-tracker-server
          IMAGE_TAG: ${{ steps.increment-git-tag.outputs.git-tag }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

  deploy:

    needs: [build-and-push]
    name: Deploy Image to EC2
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Git - Get Latest Tag
        id: git-get-tag
        run: |
          bash ./.github/git_get_tag.sh

      - name: Deployment - Executing EC2 SSH Commands
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ${{ secrets.AWS_EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo su
            sudo docker system prune -a
            export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY }}
            export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
            sudo docker login -u AWS -p $(aws ecr get-login-password --region ca-central-1) 321299144580.dkr.ecr.ca-central-1.amazonaws.com
            sudo docker pull 321299144580.dkr.ecr.ca-central-1.amazonaws.com/covid-19-tracker-server:${{ steps.git-get-tag.outputs.git-tag }}
            sudo SERVER_ECR_VERSION=${{ steps.git-get-tag.outputs.git-tag }} docker-compose up -d
